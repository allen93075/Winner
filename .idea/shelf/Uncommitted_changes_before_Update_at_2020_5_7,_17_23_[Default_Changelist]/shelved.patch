Index: RF_call.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\nimport sys\n\nfrom PyQt5 import QtWidgets\nfrom RF import Ui_Form\nfrom rf_example_new import *\n\nclass RF(QtWidgets.QWidget):\n    def __int__(self):\n        super(RF,self).__init__()\n        self.ui = Ui_Form()\n        self.ui.setupUi(self)\n        self.setWindowTitle(\"隨機森林\")\n        self.ui.choseDataBtn.clicked.connect(self.slot_btn_chooseDir)\n        self.ui.startTrainBtn.clicked.connect(self.exec_rf)\n        \n        f = open(r'C:/Users/yujie/.spyder-py3/spyder_workplace/winnerProject/test.txt')\n        t = f.readline()\n        text = t.split(\",\")\n        text = list(map(str, text))\n        text = [float(x) for x in text]\n        # Earning odds\n        t1 = (text[4]/text[5])\n        EarningOdds = str(t1)#back to str\n        #ProfitFactor\n        t2 = (text[6]/text[7]-1)\n        ProfitFactor = str(t2)\n        #TotalTradesCost\n        t3 = (1000*text[3])\n        TotalTradesCost = str(t3)\n        text = [str(x) for x in text]\n\n        self.ui.profitOut.setText(text[0])\n        self.ui.winRateOut.setText(text[1])\n        self.ui.winLossOut.setText(EarningOdds)\n        self.ui.profitFactorOut.setText(ProfitFactor)\n        self.ui.mddOut.setText(text[2])\n        self.ui.tradeCuntOut.setText(text[3])\n        self.ui.costOut.setText(TotalTradesCost)\n        \n    def exec_rf(self):\n        rf_main(loadFile())\n\n    def slot_btn_chooseDir(self):\n        self.cwd = os.getcwd()\n        dir_choose = QtWidgets.QFileDialog.getOpenFileName(self,\n                                                           \"選取文件夾\",\n                                                           self.cwd,\n                                                           \"excel(*.csv)\")  # 起始路徑\n\n        if dir_choose == \"\":\n            print(\"\\n取消選擇\")\n            return\n        self.ui.comboBox.addItem(dir_choose[0])\n        print(self.ui.comboBox.currentText())\n        print(type(dir_choose))\n        print(\"\\n你選擇的文件夾為:\")\n        print(dir_choose)\n\n\n\nif __name__ == '__main__':\n    app = QtWidgets.QApplication(sys.argv)\n    ui = RF()\n    ui.__int__()\n    ui.show()\n    sys.exit(app.exec_())\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- RF_call.py	(revision b486033a5c04ca875972c4545b80bb51a3e17ebe)
+++ RF_call.py	(date 1588833655987)
@@ -3,7 +3,7 @@
 
 from PyQt5 import QtWidgets
 from RF import Ui_Form
-from rf_example_new import *
+# from rf_example_new import *
 
 class RF(QtWidgets.QWidget):
     def __int__(self):
@@ -12,7 +12,7 @@
         self.ui.setupUi(self)
         self.setWindowTitle("隨機森林")
         self.ui.choseDataBtn.clicked.connect(self.slot_btn_chooseDir)
-        self.ui.startTrainBtn.clicked.connect(self.exec_rf)
+        # self.ui.startTrainBtn.clicked.connect(self.exec_rf)
         
         f = open(r'C:/Users/yujie/.spyder-py3/spyder_workplace/winnerProject/test.txt')
         t = f.readline()
@@ -38,8 +38,8 @@
         self.ui.tradeCuntOut.setText(text[3])
         self.ui.costOut.setText(TotalTradesCost)
         
-    def exec_rf(self):
-        rf_main(loadFile())
+    # def exec_rf(self):
+    #     rf_main(loadFile())
 
     def slot_btn_chooseDir(self):
         self.cwd = os.getcwd()
Index: Main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import sys, os, webbrowser\nimport pandas as pd\nfrom PyQt5 import QtCore, QtGui, QtWidgets\nfrom PyQt5.QtGui import QPixmap\nfrom webcrawler import webcrawler, link\nfrom Menu import About_US\nfrom MainUI import Ui_MainWindow\nfrom LSTM_call import LSTM\nfrom RF_call import RF\nfrom Adaboost_call import AdaboostUI\nfrom BigBar_Strategies_call import BigBar_Strategies\nfrom MLP_UI_call import MLPUI\nfrom MoveAverage_Strategies_call import MoveAverage_Strategies\nfrom RangeBreak_Strategies_call import RangeBreak_Strategies\nfrom Turtle30k_Strategies_call import Turtle30k_Strategies\n# from Turtle60k_Strategies_call import Turtle60k_Strategies\nfrom Read_txt_call import ReadTXT\n\nclass Mainwin(QtWidgets.QMainWindow):\n    def __init__(self, parent=None):\n        super(Mainwin, self).__init__()\n        self.ui = Ui_MainWindow()\n        self.ui.setupUi(self)\n        self.ui.stack1 = QtWidgets.QWidget()\n        self.ui.stack1 = LSTM()\n        self.ui.stack1.__int__()\n        self.ui.stack1.setObjectName(\"LSTM_UI\")\n        self.ui.stackedWidget.addWidget(self.ui.stack1)\n        self.ui.stack2 = RF()\n        self.ui.stack2.__int__()\n        self.ui.stack2.setObjectName(\"Randomforest\")\n        self.ui.stackedWidget.addWidget(self.ui.stack2)\n        self.resize(600, 600)\n        self.ui.actionMLP_2.triggered.connect(self.callMLP)\n        self.ui.actionAdaboost.triggered.connect(self.callAdaboost)\n        self.ui.actionLSTM_2.triggered.connect(self.callLSTM)\n        self.ui.actionReports.triggered.connect(self.callPerformance)\n        self.ui.actionAbout.triggered.connect(self.callAboutus)\n        self.ui.actionAboutMC.triggered.connect(self.callAboutMC)\n        self.ui.actionMulticharts.triggered.connect(self.callMC)\n        self.ui.actionPowerLanguage_Editor.triggered.connect(self.OpenPLEditor)\n        self.ui.actionTurtle30k.triggered.connect(self.callTurtle30k)\n        # self.ui.actionTurtle60k.triggered.connect(self.callTurtle60k)\n        self.ui.actionMA_Original.triggered.connect(self.callMA)\n        self.ui.actionRangeBreak_Original.triggered.connect(self.callRangeBreak)\n        self.ui.actionRF_2.triggered.connect(self.callRF)\n        self.ui.actionBigBar_Original.triggered.connect(self.callBigBar)\n        self.ui.title1.setOpenExternalLinks(True)\n        self.ui.title2.setOpenExternalLinks(True)\n        self.ui.title3.setOpenExternalLinks(True)\n        self.ui.title4.setOpenExternalLinks(True)\n        self.ui.title5.setOpenExternalLinks(True)\n        #   MainWindow Title\n        self.setWindowTitle('期貨贏家機器人')\n\n    def web(self, a=[]):\n        self.ui.title1.setText(a[0])\n        self.ui.title2.setText(a[1])\n        self.ui.title3.setText(a[2])\n        self.ui.title4.setText(a[3])\n        self.ui.title5.setText(a[4])\n\n    def link(self, b=[], a=[]):\n        self.ui.title1.setText((\"<a href=\\\"\" + b[0] + \"\\\">\\n\" + a[0]))\n        self.ui.title2.setText((\"<a href=\\\"\" + b[1] + \"\\\">\\n\" + a[1]))\n        self.ui.title3.setText((\"<a href=\\\"\" + b[2] + \"\\\">\\n\" + a[2]))\n        self.ui.title4.setText((\"<a href=\\\"\" + b[3] + \"\\\">\\n\" + a[3]))\n        self.ui.title5.setText((\"<a href=\\\"\" + b[4] + \"\\\">\\n\" + a[4]))\n\n    def callLSTM(self):\n        self.ui.stackedWidget.setCurrentIndex(2)\n        print(self.ui.stackedWidget.count())\n        print(self.ui.stackedWidget.currentIndex())\n        print(self.ui.stackedWidget.currentWidget().objectName())\n        print(self.ui.stackedWidget.currentWidget())\n        print(self.ui.stackedWidget.indexOf(self.ui.stack1))\n\n    def callRF(self):\n        self.ui.stackedWidget.setCurrentIndex(3)\n\n    def callMC(self):\n        self.call = os.system(\n            'open -a \"/Users/tienyou/Applications (Parallels)/{a385b35d-69a7-4fa5-9d2b-3a0d2c95954e} Applications.localized/MultiCharts64 [2].app\"')\n\n    def OpenPLEditor(self):\n        self.call = os.system(\n            'open -a \"/Users/tienyou/Applications (Parallels)/{a385b35d-69a7-4fa5-9d2b-3a0d2c95954e} Applications.localized/MultiCharts64 [4].app\"')\n\n    def callAboutMC(self):\n        webbrowser.open(\"https://www.multicharts.com.tw/characteristic.aspx\")\n\n    def callAboutus(self):\n        self.aboutus = About_US()\n        self.aboutus.show()\n\n    def callTurtle30k(self):\n        self.turtle30kui = Turtle30k_Strategies()\n        self.turtle30kui.show()\n\n    # def callTurtle60k(self):\n    #     self.turtle60kui = Turtle60k_Strategies()\n    #     self.turtle60kui.show()\n\n    def callMA(self):\n        self.maui = MoveAverage_Strategies()\n        self.maui.show()\n\n    def callRangeBreak(self):\n        self.rangebreakui = RangeBreak_Strategies()\n        self.rangebreakui.show()\n\n    def callAdaboost(self):\n        self.calladaboost = AdaboostUI()\n        self.calladaboost.show()\n\n    def callMLP(self):\n        self.callmlp = MLPUI()\n        self.callmlp.show()\n\n    def callBigBar(self):\n        self.callbigbar = BigBar_Strategies()\n        self.callbigbar.show()\n\n    def callPerformance(self):\n        self.callperformance = ReadTXT()\n        self.callperformance.show()\n\n\nif __name__ == '__main__':\n    app = QtWidgets.QApplication(sys.argv)\n    ui = Mainwin()\n    ui.link(link(), webcrawler())\n    ui.show()\n    sys.exit(app.exec_())
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Main.py	(revision b486033a5c04ca875972c4545b80bb51a3e17ebe)
+++ Main.py	(date 1588833674373)
@@ -26,10 +26,10 @@
         self.ui.stack1.__int__()
         self.ui.stack1.setObjectName("LSTM_UI")
         self.ui.stackedWidget.addWidget(self.ui.stack1)
-        self.ui.stack2 = RF()
-        self.ui.stack2.__int__()
-        self.ui.stack2.setObjectName("Randomforest")
-        self.ui.stackedWidget.addWidget(self.ui.stack2)
+        # self.ui.stack2 = RF()
+        # self.ui.stack2.__int__()
+        # self.ui.stack2.setObjectName("Randomforest")
+        # self.ui.stackedWidget.addWidget(self.ui.stack2)
         self.resize(600, 600)
         self.ui.actionMLP_2.triggered.connect(self.callMLP)
         self.ui.actionAdaboost.triggered.connect(self.callAdaboost)
Index: MainUI.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># -*- coding: utf-8 -*-\n\n# Form implementation generated from reading ui file 'New_UI_for_edit.ui'\n#\n# Created by: PyQt5 UI code generator 5.14.1\n#\n# WARNING! All changes made in this file will be lost!\n\n\nfrom PyQt5 import QtCore, QtGui, QtWidgets\n\n\nclass Ui_MainWindow(object):\n    def setupUi(self, MainWindow):\n        MainWindow.setObjectName(\"MainWindow\")\n        MainWindow.resize(794, 638)\n        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)\n        sizePolicy.setHorizontalStretch(0)\n        sizePolicy.setVerticalStretch(0)\n        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())\n        MainWindow.setSizePolicy(sizePolicy)\n        MainWindow.setStyleSheet(\"\")\n        self.centralwidget = QtWidgets.QWidget(MainWindow)\n        self.centralwidget.setObjectName(\"centralwidget\")\n        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)\n        self.horizontalLayout.setObjectName(\"horizontalLayout\")\n        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)\n        self.stackedWidget.setObjectName(\"stackedWidget\")\n        self.page = QtWidgets.QWidget()\n        self.page.setObjectName(\"page\")\n        self.gridLayout_5 = QtWidgets.QGridLayout(self.page)\n        self.gridLayout_5.setObjectName(\"gridLayout_5\")\n        self.gridLayout_3 = QtWidgets.QGridLayout()\n        self.gridLayout_3.setObjectName(\"gridLayout_3\")\n        self.scrollArea = QtWidgets.QScrollArea(self.page)\n        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)\n        sizePolicy.setHorizontalStretch(0)\n        sizePolicy.setVerticalStretch(0)\n        sizePolicy.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())\n        self.scrollArea.setSizePolicy(sizePolicy)\n        self.scrollArea.setWidgetResizable(True)\n        self.scrollArea.setObjectName(\"scrollArea\")\n        self.scrollAreaWidgetContents = QtWidgets.QWidget()\n        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 365, 543))\n        self.scrollAreaWidgetContents.setObjectName(\"scrollAreaWidgetContents\")\n        self.gridLayout_2 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)\n        self.gridLayout_2.setObjectName(\"gridLayout_2\")\n        self.title3 = QtWidgets.QLabel(self.scrollAreaWidgetContents)\n        self.title3.setObjectName(\"title3\")\n        self.gridLayout_2.addWidget(self.title3, 2, 0, 1, 1)\n        self.title1 = QtWidgets.QLabel(self.scrollAreaWidgetContents)\n        self.title1.setObjectName(\"title1\")\n        self.gridLayout_2.addWidget(self.title1, 0, 0, 1, 1)\n        self.title4 = QtWidgets.QLabel(self.scrollAreaWidgetContents)\n        self.title4.setEnabled(True)\n        self.title4.setObjectName(\"title4\")\n        self.gridLayout_2.addWidget(self.title4, 3, 0, 1, 1)\n        self.title5 = QtWidgets.QLabel(self.scrollAreaWidgetContents)\n        self.title5.setObjectName(\"title5\")\n        self.gridLayout_2.addWidget(self.title5, 4, 0, 1, 1)\n        self.title2 = QtWidgets.QLabel(self.scrollAreaWidgetContents)\n        self.title2.setObjectName(\"title2\")\n        self.gridLayout_2.addWidget(self.title2, 1, 0, 1, 1)\n        self.scrollArea.setWidget(self.scrollAreaWidgetContents)\n        self.gridLayout_3.addWidget(self.scrollArea, 0, 0, 1, 1)\n        self.frame = QtWidgets.QFrame(self.page)\n        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)\n        sizePolicy.setHorizontalStretch(0)\n        sizePolicy.setVerticalStretch(0)\n        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())\n        self.frame.setSizePolicy(sizePolicy)\n        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)\n        self.frame.setFrameShadow(QtWidgets.QFrame.Sunken)\n        self.frame.setObjectName(\"frame\")\n        self.gridLayout = QtWidgets.QGridLayout(self.frame)\n        self.gridLayout.setObjectName(\"gridLayout\")\n        self.gridLayout_3.addWidget(self.frame, 0, 1, 1, 1)\n        self.gridLayout_5.addLayout(self.gridLayout_3, 0, 0, 1, 1)\n        self.stackedWidget.addWidget(self.page)\n        self.page_2 = QtWidgets.QWidget()\n        self.page_2.setObjectName(\"page_2\")\n        self.label = QtWidgets.QLabel(self.page_2)\n        self.label.setGeometry(QtCore.QRect(140, 70, 231, 261))\n        font = QtGui.QFont()\n        font.setFamily(\"AGA Arabesque\")\n        font.setPointSize(72)\n        self.label.setFont(font)\n        self.label.setObjectName(\"label\")\n        self.stackedWidget.addWidget(self.page_2)\n        self.horizontalLayout.addWidget(self.stackedWidget)\n        MainWindow.setCentralWidget(self.centralwidget)\n        self.menubar = QtWidgets.QMenuBar(MainWindow)\n        self.menubar.setGeometry(QtCore.QRect(0, 0, 794, 22))\n        self.menubar.setDefaultUp(True)\n        self.menubar.setNativeMenuBar(False)\n        self.menubar.setObjectName(\"menubar\")\n        self.menu_Strategy = QtWidgets.QMenu(self.menubar)\n        self.menu_Strategy.setSizeIncrement(QtCore.QSize(0, 0))\n        self.menu_Strategy.setObjectName(\"menu_Strategy\")\n        self.menuTurtle = QtWidgets.QMenu(self.menu_Strategy)\n        self.menuTurtle.setObjectName(\"menuTurtle\")\n        self.menuMoveAverage = QtWidgets.QMenu(self.menu_Strategy)\n        self.menuMoveAverage.setObjectName(\"menuMoveAverage\")\n        self.menuRangeBreak = QtWidgets.QMenu(self.menu_Strategy)\n        self.menuRangeBreak.setObjectName(\"menuRangeBreak\")\n        self.menuBigBar = QtWidgets.QMenu(self.menu_Strategy)\n        self.menuBigBar.setObjectName(\"menuBigBar\")\n        self.menu_AI = QtWidgets.QMenu(self.menubar)\n        self.menu_AI.setSizeIncrement(QtCore.QSize(0, 0))\n        self.menu_AI.setObjectName(\"menu_AI\")\n        self.menu_Reports = QtWidgets.QMenu(self.menubar)\n        self.menu_Reports.setSizeIncrement(QtCore.QSize(0, 0))\n        self.menu_Reports.setObjectName(\"menu_Reports\")\n        self.menuOpen = QtWidgets.QMenu(self.menubar)\n        self.menuOpen.setObjectName(\"menuOpen\")\n        self.menu_About = QtWidgets.QMenu(self.menubar)\n        self.menu_About.setObjectName(\"menu_About\")\n        MainWindow.setMenuBar(self.menubar)\n        self.statusbar = QtWidgets.QStatusBar(MainWindow)\n        self.statusbar.setObjectName(\"statusbar\")\n        MainWindow.setStatusBar(self.statusbar)\n        self.actionRF_2 = QtWidgets.QAction(MainWindow)\n        self.actionRF_2.setObjectName(\"actionRF_2\")\n        self.actionDT_2 = QtWidgets.QAction(MainWindow)\n        self.actionDT_2.setObjectName(\"actionDT_2\")\n        self.actionLSTM_2 = QtWidgets.QAction(MainWindow)\n        self.actionLSTM_2.setObjectName(\"actionLSTM_2\")\n        self.actionMLP_2 = QtWidgets.QAction(MainWindow)\n        self.actionMLP_2.setObjectName(\"actionMLP_2\")\n        self.actionMulticharts = QtWidgets.QAction(MainWindow)\n        self.actionMulticharts.setObjectName(\"actionMulticharts\")\n        self.actionTurtle30k = QtWidgets.QAction(MainWindow)\n        self.actionTurtle30k.setObjectName(\"actionTurtle30k\")\n        self.actionMA_Original = QtWidgets.QAction(MainWindow)\n        self.actionMA_Original.setObjectName(\"actionMA_Original\")\n        self.actionRangeBreak_Original = QtWidgets.QAction(MainWindow)\n        self.actionRangeBreak_Original.setObjectName(\"actionRangeBreak_Original\")\n        self.actionAbout = QtWidgets.QAction(MainWindow)\n        self.actionAbout.setObjectName(\"actionAbout\")\n        self.actionAboutMC = QtWidgets.QAction(MainWindow)\n        self.actionAboutMC.setObjectName(\"actionAboutMC\")\n        self.actionPowerLanguage_Editor = QtWidgets.QAction(MainWindow)\n        self.actionPowerLanguage_Editor.setObjectName(\"actionPowerLanguage_Editor\")\n        self.actionAdaboost = QtWidgets.QAction(MainWindow)\n        self.actionAdaboost.setObjectName(\"actionAdaboost\")\n        self.actionBigBar_Original = QtWidgets.QAction(MainWindow)\n        self.actionBigBar_Original.setObjectName(\"actionBigBar_Original\")\n        self.actionReports = QtWidgets.QAction(MainWindow)\n        self.actionReports.setObjectName(\"actionReports\")\n        self.menuTurtle.addAction(self.actionTurtle30k)\n        self.menuMoveAverage.addAction(self.actionMA_Original)\n        self.menuRangeBreak.addAction(self.actionRangeBreak_Original)\n        self.menuBigBar.addAction(self.actionBigBar_Original)\n        self.menu_Strategy.addAction(self.menuTurtle.menuAction())\n        self.menu_Strategy.addAction(self.menuMoveAverage.menuAction())\n        self.menu_Strategy.addAction(self.menuRangeBreak.menuAction())\n        self.menu_Strategy.addAction(self.menuBigBar.menuAction())\n        self.menu_AI.addAction(self.actionRF_2)\n        self.menu_AI.addAction(self.actionDT_2)\n        self.menu_AI.addAction(self.actionLSTM_2)\n        self.menu_AI.addAction(self.actionMLP_2)\n        self.menu_AI.addAction(self.actionAdaboost)\n        self.menu_Reports.addAction(self.actionReports)\n        self.menuOpen.addAction(self.actionMulticharts)\n        self.menuOpen.addAction(self.actionPowerLanguage_Editor)\n        self.menu_About.addAction(self.actionAbout)\n        self.menu_About.addAction(self.actionAboutMC)\n        self.menubar.addAction(self.menu_Strategy.menuAction())\n        self.menubar.addAction(self.menu_AI.menuAction())\n        self.menubar.addAction(self.menu_Reports.menuAction())\n        self.menubar.addAction(self.menuOpen.menuAction())\n        self.menubar.addAction(self.menu_About.menuAction())\n\n        self.retranslateUi(MainWindow)\n        self.stackedWidget.setCurrentIndex(0)\n        QtCore.QMetaObject.connectSlotsByName(MainWindow)\n\n    def retranslateUi(self, MainWindow):\n        _translate = QtCore.QCoreApplication.translate\n        MainWindow.setWindowTitle(_translate(\"MainWindow\", \"MainWindow\"))\n        self.title3.setText(_translate(\"MainWindow\", \"TextLabel\"))\n        self.title1.setText(_translate(\"MainWindow\", \"TextLabel\"))\n        self.title4.setText(_translate(\"MainWindow\", \"TextLabel\"))\n        self.title5.setText(_translate(\"MainWindow\", \"TextLabel\"))\n        self.title2.setText(_translate(\"MainWindow\", \"TextLabel\"))\n        self.label.setText(_translate(\"MainWindow\", \"TextLabel\"))\n        self.menu_Strategy.setTitle(_translate(\"MainWindow\", \"交易策略\"))\n        self.menuTurtle.setTitle(_translate(\"MainWindow\", \"海龜\"))\n        self.menuMoveAverage.setTitle(_translate(\"MainWindow\", \"移動均線\"))\n        self.menuRangeBreak.setTitle(_translate(\"MainWindow\", \"區間突破\"))\n        self.menuBigBar.setTitle(_translate(\"MainWindow\", \"大量k棒高低點突破\"))\n        self.menu_AI.setTitle(_translate(\"MainWindow\", \"AI\"))\n        self.menu_Reports.setTitle(_translate(\"MainWindow\", \"績效報告\"))\n        self.menuOpen.setTitle(_translate(\"MainWindow\", \"開啟\"))\n        self.menu_About.setTitle(_translate(\"MainWindow\", \"關於\"))\n        self.actionRF_2.setText(_translate(\"MainWindow\", \"隨機森林(RF)\"))\n        self.actionDT_2.setText(_translate(\"MainWindow\", \"決策樹(DT)\"))\n        self.actionLSTM_2.setText(_translate(\"MainWindow\", \"長短期記憶(LSTM)\"))\n        self.actionMLP_2.setText(_translate(\"MainWindow\", \"多層感知器(MLP)\"))\n        self.actionMulticharts.setText(_translate(\"MainWindow\", \"Multicharts\"))\n        self.actionTurtle30k.setText(_translate(\"MainWindow\", \"海龜30k策略集\"))\n        self.actionMA_Original.setText(_translate(\"MainWindow\", \"移動均線策略集\"))\n        self.actionRangeBreak_Original.setText(_translate(\"MainWindow\", \"區間突破策略集\"))\n        self.actionAbout.setText(_translate(\"MainWindow\", \"關於我們\"))\n        self.actionAboutMC.setText(_translate(\"MainWindow\", \"關於Multicharts\"))\n        self.actionPowerLanguage_Editor.setText(_translate(\"MainWindow\", \"PowerLanguage Editor\"))\n        self.actionAdaboost.setText(_translate(\"MainWindow\", \"自適應增強(Adaboost)\"))\n        self.actionBigBar_Original.setText(_translate(\"MainWindow\", \"BigBar策略集\"))\n        self.actionReports.setText(_translate(\"MainWindow\", \"績效報告\"))
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- MainUI.py	(revision b486033a5c04ca875972c4545b80bb51a3e17ebe)
+++ MainUI.py	(date 1588834633028)
@@ -121,8 +121,6 @@
         MainWindow.setStatusBar(self.statusbar)
         self.actionRF_2 = QtWidgets.QAction(MainWindow)
         self.actionRF_2.setObjectName("actionRF_2")
-        self.actionDT_2 = QtWidgets.QAction(MainWindow)
-        self.actionDT_2.setObjectName("actionDT_2")
         self.actionLSTM_2 = QtWidgets.QAction(MainWindow)
         self.actionLSTM_2.setObjectName("actionLSTM_2")
         self.actionMLP_2 = QtWidgets.QAction(MainWindow)
@@ -156,7 +154,6 @@
         self.menu_Strategy.addAction(self.menuRangeBreak.menuAction())
         self.menu_Strategy.addAction(self.menuBigBar.menuAction())
         self.menu_AI.addAction(self.actionRF_2)
-        self.menu_AI.addAction(self.actionDT_2)
         self.menu_AI.addAction(self.actionLSTM_2)
         self.menu_AI.addAction(self.actionMLP_2)
         self.menu_AI.addAction(self.actionAdaboost)
@@ -189,12 +186,11 @@
         self.menuMoveAverage.setTitle(_translate("MainWindow", "移動均線"))
         self.menuRangeBreak.setTitle(_translate("MainWindow", "區間突破"))
         self.menuBigBar.setTitle(_translate("MainWindow", "大量k棒高低點突破"))
-        self.menu_AI.setTitle(_translate("MainWindow", "AI"))
+        self.menu_AI.setTitle(_translate("MainWindow", "智能交易"))
         self.menu_Reports.setTitle(_translate("MainWindow", "績效報告"))
         self.menuOpen.setTitle(_translate("MainWindow", "開啟"))
         self.menu_About.setTitle(_translate("MainWindow", "關於"))
         self.actionRF_2.setText(_translate("MainWindow", "隨機森林(RF)"))
-        self.actionDT_2.setText(_translate("MainWindow", "決策樹(DT)"))
         self.actionLSTM_2.setText(_translate("MainWindow", "長短期記憶(LSTM)"))
         self.actionMLP_2.setText(_translate("MainWindow", "多層感知器(MLP)"))
         self.actionMulticharts.setText(_translate("MainWindow", "Multicharts"))
Index: New_UI_for_edit.ui
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ui version=\"4.0\">\n <class>MainWindow</class>\n <widget class=\"QMainWindow\" name=\"MainWindow\">\n  <property name=\"geometry\">\n   <rect>\n    <x>0</x>\n    <y>0</y>\n    <width>794</width>\n    <height>638</height>\n   </rect>\n  </property>\n  <property name=\"sizePolicy\">\n   <sizepolicy hsizetype=\"Fixed\" vsizetype=\"Fixed\">\n    <horstretch>0</horstretch>\n    <verstretch>0</verstretch>\n   </sizepolicy>\n  </property>\n  <property name=\"windowTitle\">\n   <string>MainWindow</string>\n  </property>\n  <property name=\"styleSheet\">\n   <string notr=\"true\"/>\n  </property>\n  <widget class=\"QWidget\" name=\"centralwidget\">\n   <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n    <item>\n     <widget class=\"QStackedWidget\" name=\"stackedWidget\">\n      <property name=\"currentIndex\">\n       <number>0</number>\n      </property>\n      <widget class=\"QWidget\" name=\"page\">\n       <layout class=\"QGridLayout\" name=\"gridLayout_5\">\n        <item row=\"0\" column=\"0\">\n         <layout class=\"QGridLayout\" name=\"gridLayout_3\">\n          <item row=\"0\" column=\"0\">\n           <widget class=\"QScrollArea\" name=\"scrollArea\">\n            <property name=\"sizePolicy\">\n             <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Preferred\">\n              <horstretch>0</horstretch>\n              <verstretch>0</verstretch>\n             </sizepolicy>\n            </property>\n            <property name=\"widgetResizable\">\n             <bool>true</bool>\n            </property>\n            <widget class=\"QWidget\" name=\"scrollAreaWidgetContents\">\n             <property name=\"geometry\">\n              <rect>\n               <x>0</x>\n               <y>0</y>\n               <width>365</width>\n               <height>543</height>\n              </rect>\n             </property>\n             <layout class=\"QGridLayout\" name=\"gridLayout_2\">\n              <item row=\"2\" column=\"0\">\n               <widget class=\"QLabel\" name=\"title3\">\n                <property name=\"text\">\n                 <string>TextLabel</string>\n                </property>\n               </widget>\n              </item>\n              <item row=\"0\" column=\"0\">\n               <widget class=\"QLabel\" name=\"title1\">\n                <property name=\"text\">\n                 <string>TextLabel</string>\n                </property>\n               </widget>\n              </item>\n              <item row=\"3\" column=\"0\">\n               <widget class=\"QLabel\" name=\"title4\">\n                <property name=\"enabled\">\n                 <bool>true</bool>\n                </property>\n                <property name=\"text\">\n                 <string>TextLabel</string>\n                </property>\n               </widget>\n              </item>\n              <item row=\"4\" column=\"0\">\n               <widget class=\"QLabel\" name=\"title5\">\n                <property name=\"text\">\n                 <string>TextLabel</string>\n                </property>\n               </widget>\n              </item>\n              <item row=\"1\" column=\"0\">\n               <widget class=\"QLabel\" name=\"title2\">\n                <property name=\"text\">\n                 <string>TextLabel</string>\n                </property>\n               </widget>\n              </item>\n             </layout>\n            </widget>\n           </widget>\n          </item>\n          <item row=\"0\" column=\"1\">\n           <widget class=\"QFrame\" name=\"frame\">\n            <property name=\"sizePolicy\">\n             <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Preferred\">\n              <horstretch>0</horstretch>\n              <verstretch>0</verstretch>\n             </sizepolicy>\n            </property>\n            <property name=\"frameShape\">\n             <enum>QFrame::StyledPanel</enum>\n            </property>\n            <property name=\"frameShadow\">\n             <enum>QFrame::Sunken</enum>\n            </property>\n            <layout class=\"QGridLayout\" name=\"gridLayout\"/>\n           </widget>\n          </item>\n         </layout>\n        </item>\n       </layout>\n      </widget>\n      <widget class=\"QWidget\" name=\"page_2\">\n       <widget class=\"QLabel\" name=\"label\">\n        <property name=\"geometry\">\n         <rect>\n          <x>140</x>\n          <y>70</y>\n          <width>231</width>\n          <height>261</height>\n         </rect>\n        </property>\n        <property name=\"font\">\n         <font>\n          <family>AGA Arabesque</family>\n          <pointsize>72</pointsize>\n         </font>\n        </property>\n        <property name=\"text\">\n         <string>TextLabel</string>\n        </property>\n       </widget>\n      </widget>\n     </widget>\n    </item>\n   </layout>\n  </widget>\n  <widget class=\"QMenuBar\" name=\"menubar\">\n   <property name=\"geometry\">\n    <rect>\n     <x>0</x>\n     <y>0</y>\n     <width>794</width>\n     <height>22</height>\n    </rect>\n   </property>\n   <property name=\"defaultUp\">\n    <bool>true</bool>\n   </property>\n   <property name=\"nativeMenuBar\">\n    <bool>false</bool>\n   </property>\n   <widget class=\"QMenu\" name=\"menu_Strategy\">\n    <property name=\"sizeIncrement\">\n     <size>\n      <width>0</width>\n      <height>0</height>\n     </size>\n    </property>\n    <property name=\"title\">\n     <string>交易策略</string>\n    </property>\n    <widget class=\"QMenu\" name=\"menuTurtle\">\n     <property name=\"title\">\n      <string>海龜</string>\n     </property>\n     <addaction name=\"actionTurtle30k\"/>\n     <!-- <addaction name=\"actionTurtle60k\"/> -->\n    </widget>\n    <widget class=\"QMenu\" name=\"menuMoveAverage\">\n     <property name=\"title\">\n      <string>移動均線</string>\n     </property>\n     <addaction name=\"actionMA_Original\"/>\n    </widget>\n    <widget class=\"QMenu\" name=\"menuRangeBreak\">\n     <property name=\"title\">\n      <string>區間突破</string>\n     </property>\n     <addaction name=\"actionRangeBreak_Original\"/>\n    </widget>\n    <widget class=\"QMenu\" name=\"menuBigBar\">\n     <property name=\"title\">\n      <string>大量k棒高低點突破</string>\n     </property>\n     <addaction name=\"actionBigBar_Original\"/>\n    </widget>\n    <addaction name=\"menuTurtle\"/>\n    <addaction name=\"menuMoveAverage\"/>\n    <addaction name=\"menuRangeBreak\"/>\n    <addaction name=\"menuBigBar\"/>\n   </widget>\n   <widget class=\"QMenu\" name=\"menu_AI\">\n    <property name=\"sizeIncrement\">\n     <size>\n      <width>0</width>\n      <height>0</height>\n     </size>\n    </property>\n    <property name=\"title\">\n     <string>AI</string>\n    </property>\n    <addaction name=\"actionRF_2\"/>\n    <addaction name=\"actionDT_2\"/>\n    <addaction name=\"actionLSTM_2\"/>\n    <addaction name=\"actionMLP_2\"/>\n    <addaction name=\"actionAdaboost\"/>\n   </widget>\n   <widget class=\"QMenu\" name=\"menu_Reports\">\n    <property name=\"sizeIncrement\">\n     <size>\n      <width>0</width>\n      <height>0</height>\n     </size>\n    </property>\n    <property name=\"title\">\n     <string>績效報告</string>\n    </property>\n    <addaction name=\"actionReports\"/>\n   </widget>\n   <widget class=\"QMenu\" name=\"menuOpen\">\n    <property name=\"title\">\n     <string>開啟</string>\n    </property>\n    <addaction name=\"actionMulticharts\"/>\n    <addaction name=\"actionPowerLanguage_Editor\"/>\n   </widget>\n   <widget class=\"QMenu\" name=\"menu_About\">\n    <property name=\"title\">\n     <string>關於</string>\n    </property>\n    <addaction name=\"actionAbout\"/>\n    <addaction name=\"actionAboutMC\"/>\n   </widget>\n   <addaction name=\"menu_Strategy\"/>\n   <addaction name=\"menu_AI\"/>\n   <addaction name=\"menu_Reports\"/>\n   <addaction name=\"menuOpen\"/>\n   <addaction name=\"menu_About\"/>\n  </widget>\n  <widget class=\"QStatusBar\" name=\"statusbar\"/>\n  <action name=\"actionRF_2\">\n   <property name=\"text\">\n    <string>隨機森林(RF)</string>\n   </property>\n  </action>\n  <action name=\"actionDT_2\">\n   <property name=\"text\">\n    <string>決策樹(DT)</string>\n   </property>\n  </action>\n  <action name=\"actionLSTM_2\">\n   <property name=\"text\">\n    <string>長短期記憶(LSTM)</string>\n   </property>\n  </action>\n  <action name=\"actionMLP_2\">\n   <property name=\"text\">\n    <string>多層感知器(MLP)</string>\n   </property>\n  </action>\n  <action name=\"actionMulticharts\">\n   <property name=\"text\">\n    <string>Multicharts</string>\n   </property>\n  </action>\n  <action name=\"actionTurtle30k\">\n   <property name=\"text\">\n    <string>海龜30k策略集</string>\n   </property>\n  </action>\n  <!-- <action name=\"actionTurtle60k\">\n   <property name=\"text\">\n    <string>海龜60k策略集</string>\n   </property>\n  </action> -->\n  <action name=\"actionMA_Original\">\n   <property name=\"text\">\n    <string>移動均線策略集</string>\n   </property>\n  </action>\n  <action name=\"actionRangeBreak_Original\">\n   <property name=\"text\">\n    <string>區間突破策略集</string>\n   </property>\n  </action>\n  <action name=\"actionAbout\">\n   <property name=\"text\">\n    <string>關於我們</string>\n   </property>\n  </action>\n  <action name=\"actionAboutMC\">\n   <property name=\"text\">\n    <string>關於Multicharts</string>\n   </property>\n  </action>\n  <action name=\"actionPowerLanguage_Editor\">\n   <property name=\"text\">\n    <string>PowerLanguage Editor</string>\n   </property>\n  </action>\n  <action name=\"actionAdaboost\">\n   <property name=\"text\">\n    <string>自適應增強(Adaboost)</string>\n   </property>\n  </action>\n  <action name=\"actionBigBar_Original\">\n   <property name=\"text\">\n    <string>BigBar策略集</string>\n   </property>\n  </action>\n  <action name=\"actionReports\">\n   <property name=\"text\">\n    <string>績效報告</string>\n   </property>\n  </action>\n </widget>\n <resources/>\n <connections/>\n</ui>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- New_UI_for_edit.ui	(revision b486033a5c04ca875972c4545b80bb51a3e17ebe)
+++ New_UI_for_edit.ui	(date 1588834584110)
@@ -205,10 +205,10 @@
      </size>
     </property>
     <property name="title">
-     <string>AI</string>
+     <string>智能交易</string>
     </property>
     <addaction name="actionRF_2"/>
-    <addaction name="actionDT_2"/>
+    <!-- <addaction name="actionDT_2"/> -->
     <addaction name="actionLSTM_2"/>
     <addaction name="actionMLP_2"/>
     <addaction name="actionAdaboost"/>
@@ -251,11 +251,11 @@
     <string>隨機森林(RF)</string>
    </property>
   </action>
-  <action name="actionDT_2">
+  <!-- <action name="actionDT_2">
    <property name="text">
     <string>決策樹(DT)</string>
    </property>
-  </action>
+  </action> -->
   <action name="actionLSTM_2">
    <property name="text">
     <string>長短期記憶(LSTM)</string>
