<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Form</class>
 <widget class="QWidget" name="Form">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1195</width>
    <height>889</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <property name="styleSheet">
   <string notr="true">background-color: rgb(242, 242, 242);</string>
  </property>
  <layout class="QGridLayout" name="gridLayout">
   <item row="0" column="1">
    <widget class="QPushButton" name="pushButton">
     <property name="styleSheet">
      <string notr="true"/>
     </property>
     <property name="text">
      <string>前往PowerLanguage Editor</string>
     </property>
    </widget>
   </item>
   <item row="0" column="0">
    <widget class="QLabel" name="label_2">
     <property name="styleSheet">
      <string notr="true"/>
     </property>
     <property name="text">
      <string>海龜30k策略</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
   </item>
   <item row="1" column="0">
    <widget class="QTabWidget" name="tabWidget">
     <property name="styleSheet">
      <string notr="true"/>
     </property>
     <property name="tabShape">
      <enum>QTabWidget::Rounded</enum>
     </property>
     <property name="currentIndex">
      <number>4</number>
     </property>
     <property name="tabBarAutoHide">
      <bool>false</bool>
     </property>
     <widget class="QWidget" name="tab">
      <attribute name="title">
       <string>原始策略</string>
      </attribute>
      <layout class="QGridLayout" name="gridLayout_2">
       <item row="0" column="0">
        <widget class="QLabel" name="label">
         <property name="styleSheet">
          <string notr="true"/>
         </property>
         <property name="text">
          <string>策略基本介紹：
海龜30k基本策略

程式碼如下：</string>
         </property>
         <property name="alignment">
          <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>
         </property>
        </widget>
       </item>
       <item row="2" column="0">
        <widget class="QScrollArea" name="scrollArea">
         <property name="widgetResizable">
          <bool>true</bool>
         </property>
         <widget class="QWidget" name="scrollAreaWidgetContents">
          <property name="geometry">
           <rect>
            <x>0</x>
            <y>0</y>
            <width>948</width>
            <height>696</height>
           </rect>
          </property>
          <layout class="QGridLayout" name="gridLayout_5">
           <item row="0" column="0">
            <widget class="QLabel" name="label_9">
             <property name="styleSheet">
              <string notr="true"/>
             </property>
             <property name="text">
              <string>Input:len(20);
var: pts(1),MP(0),ExitAmount(0);
MP=marketposition*currentcontracts;

if Close cross over Highest(high,len)[1] then buy(&quot;buy&quot;)pts contract the next bar at market;
if Close cross over Lowest(low,len)[1] then sellshort(&quot;sell&quot;)pts contract the next bar at market;
ExitAmount=pts;


if MP=1 then buy pts contract next bar at entryprice*
(1+0.01)stop;

if MP=-1 then sellshort pts contract next bar at entryprice*
(1-0.01)stop;



if MP&gt;=1 then sell pts contract next bar at entryprice*
(1- 0.02)stop;

if MP&lt;=1 then buytocover pts contract next bar at entryprice*
(1+0.02)stop;
</string>
             </property>
             <property name="textFormat">
              <enum>Qt::PlainText</enum>
             </property>
             <property name="alignment">
              <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>
             </property>
            </widget>
           </item>
          </layout>
         </widget>
        </widget>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_2">
      <attribute name="title">
       <string>凱利公式</string>
      </attribute>
      <layout class="QGridLayout" name="gridLayout_3">
       <item row="0" column="0">
        <widget class="QLabel" name="label_3">
         <property name="text">
          <string>策略基本介紹：
海龜30k＋凱利公式

程式碼如下：</string>
         </property>
        </widget>
       </item>
       <item row="1" column="0">
        <widget class="QScrollArea" name="scrollArea_2">
         <property name="widgetResizable">
          <bool>true</bool>
         </property>
         <widget class="QWidget" name="scrollAreaWidgetContents_2">
          <property name="geometry">
           <rect>
            <x>0</x>
            <y>0</y>
            <width>948</width>
            <height>712</height>
           </rect>
          </property>
          <layout class="QGridLayout" name="gridLayout_7">
           <item row="0" column="0">
            <widget class="QLabel" name="label_10">
             <property name="text">
              <string>//-----Kelly-----(1)
input:InitialCapital(1000000), MaxSize(10),len(20);
var:pTs(1),b(0),p(0),q(0),f(0),pCapitalperContract(200000),ExitAmount(0),MP(0);


//K%=W-(1-W)/R
if Grossprofit&lt;&gt;0 and Totaltrades&lt;&gt;0 and grossloss&lt;&gt;0 and   Numlostrades &lt;&gt;0 then
	b = (Grossprofit/ numwintrades)/(grossloss/ Numlostrades);
if Numwintrades&lt;&gt;0 and Totaltrades&lt;&gt;0 then
    	p = Numwintrades/ Totaltrades;
    	q = 1-p;
if b&lt;&gt;0 and p&lt;&gt;0 then
    	f = p-(q/b);
if f&lt;&gt;0 and f*(InitialCapital+netprofit)&gt;0 then
	pTS =IntPortion((f*(InitialCapital+netprofit))/pCapitalperContract);
	if pTS &lt; 1 then pTS = 1 ;
	if pTS &gt; MaxSize then pTS = MaxSize ;



//------turtle30(len)

MP=marketposition*currentcontracts;

if Close cross over Highest(high,len)[1] then buy(&quot;buy&quot;)pTS contract the next bar at market;
if Close cross over Lowest(low,len)[1] then sellshort(&quot;sell&quot;)pTS contract the next bar at market;
ExitAmount=pts;


if MP=1 then buy pTS contract next bar at entryprice*
(1+0.01)stop;

if MP=-1 then sellshort pTS contract next bar at entryprice*
(1-0.01)stop;



if MP&gt;=1 then sell pTS contract next bar at entryprice*
(1- 0.02)stop;

if MP&lt;=1 then buytocover pTS contract next bar at entryprice*
(1+0.02)stop;
</string>
             </property>
            </widget>
           </item>
          </layout>
         </widget>
        </widget>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_3">
      <attribute name="title">
       <string>固定比率</string>
      </attribute>
      <layout class="QGridLayout" name="gridLayout_4">
       <item row="1" column="0">
        <widget class="QScrollArea" name="scrollArea_3">
         <property name="widgetResizable">
          <bool>true</bool>
         </property>
         <widget class="QWidget" name="scrollAreaWidgetContents_3">
          <property name="geometry">
           <rect>
            <x>0</x>
            <y>0</y>
            <width>948</width>
            <height>696</height>
           </rect>
          </property>
          <layout class="QGridLayout" name="gridLayout_9">
           <item row="0" column="0">
            <widget class="QLabel" name="label_11">
             <property name="text">
              <string>//-----Fixed_Ratio-----(2)
Inputs: InitialCapital(1000000), Delta(20000),len(20);
Inputs: InCludeOpenPL(false), MaxSize(10);
Var: ContractAmt(0),ExitAmount(0),Equity(0),MP(0),pts(0);

if InCludeOpenPL then Equity = Round((InitialCapital + NetProfit + OpenPositionProfit),0)
     else Equity = Round((InitialCapital + NetProfit),0);

{Position Sizing - Fixed Ratio }
If Delta &gt; 0 and Equity/Delta &gt; 0 then
    ContractAmt = 0.5 * (1 + squareroot(1 + 8 * Equity/Delta));
    ContractAmt = MaxList(1, IntPortion(ContractAmt));  //IntPortion-&gt;int

if ContractAmt &lt; 1 then ContractAmt = 1 ;
if ContractAmt &gt; MaxSize then ContractAmt = MaxSize ;
pts = ContractAmt;


//------turtle(len)


MP=marketposition*currentcontracts;

if Close cross over Highest(high,len)[1] then buy(&quot;buy&quot;)pts contract the next bar at market;
if Close cross over Lowest(low,len)[1] then sellshort(&quot;sell&quot;)pts contract the next bar at market;
ExitAmount=pts;


if MP=1 then buy pts contract next bar at entryprice*
(1+0.01)stop;

if MP=-1 then sellshort pts contract next bar at entryprice*
(1-0.01)stop;



if MP&gt;=1 then sell pts contract next bar at entryprice*
(1- 0.02)stop;

if MP&lt;=1 then buytocover pts contract next bar at entryprice*
(1+0.02)stop;
</string>
             </property>
            </widget>
           </item>
          </layout>
         </widget>
        </widget>
       </item>
       <item row="0" column="0">
        <widget class="QLabel" name="label_4">
         <property name="text">
          <string>策略基本介紹：
海龜30k＋固定比率

程式碼如下：</string>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_5">
      <attribute name="title">
       <string>最佳F值</string>
      </attribute>
      <layout class="QGridLayout" name="gridLayout_6">
       <item row="1" column="0">
        <widget class="QScrollArea" name="scrollArea_4">
         <property name="widgetResizable">
          <bool>true</bool>
         </property>
         <widget class="QWidget" name="scrollAreaWidgetContents_4">
          <property name="geometry">
           <rect>
            <x>0</x>
            <y>0</y>
            <width>948</width>
            <height>696</height>
           </rect>
          </property>
          <layout class="QGridLayout" name="gridLayout_10">
           <item row="0" column="0">
            <widget class="QLabel" name="label_13">
             <property name="text">
              <string>//-----Optimal F Rule-----(4)

Input:len(20);
var: pTS(1), OptimalF_Num(10),_OptimalF(0),Equity(0),ExitAmount(0),InCludeOpenPL(false),mp(0);

if InCludeOpenPL then
	Equity = Round((InitialCapital + NetProfit + OpenPositionProfit),0)
else
	Equity = Round((InitialCapital + NetProfit),0);
	_OptimalF=Mf_OptimalF(close,OptimalF_Num,false)/100;
if _OptimalF&lt;&gt;0 and maxiddrawdown&lt;&gt;0 then
	pTS = (Equity * _OptimalF)/absvalue(maxiddrawdown);
	pTS = MaxList(1, IntPortion(pTS));


//------turtle(len)


mp=marketposition*currentcontracts;

if Close cross over Highest(high,len)[1] then buy(&quot;buy&quot;)pTS contract the next bar at market;
if Close cross over Lowest(low,len)[1] then sellshort(&quot;sell&quot;)pTS contract the next bar at market;
ExitAmount=pts;


if mp=1 then buy pTS contract next bar at entryprice*
(1+0.01)stop;

if mp=-1 then sellshort pTS contract next bar at entryprice*
(1-0.01)stop;



if mp&gt;=1 then sell pTS contract next bar at entryprice*
(1- 0.02)stop;

if mp&lt;=1 then buytocover pTS contract next bar at entryprice*
(1+0.02)stop;
</string>
             </property>
            </widget>
           </item>
          </layout>
         </widget>
        </widget>
       </item>
       <item row="0" column="0">
        <widget class="QLabel" name="label_6">
         <property name="text">
          <string>策略基本介紹：
海龜30k＋最佳F值

程式碼如下：</string>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_6">
      <attribute name="title">
       <string>LarryWilliams</string>
      </attribute>
      <layout class="QGridLayout" name="gridLayout_8">
       <item row="0" column="0">
        <widget class="QLabel" name="label_7">
         <property name="text">
          <string>策略基本介紹：
海龜30k＋LarryWilliams

程式碼如下：</string>
         </property>
        </widget>
       </item>
       <item row="1" column="0">
        <widget class="QScrollArea" name="scrollArea_5">
         <property name="widgetResizable">
          <bool>true</bool>
         </property>
         <widget class="QWidget" name="scrollAreaWidgetContents_5">
          <property name="geometry">
           <rect>
            <x>0</x>
            <y>0</y>
            <width>948</width>
            <height>712</height>
           </rect>
          </property>
          <layout class="QGridLayout" name="gridLayout_11">
           <item row="0" column="0">
            <widget class="QLabel" name="label_14">
             <property name="text">
              <string>//-----LarryWilliams-----(3)
Input:  InitialCapital(1000000), InCludeOpenPL(false),MaxSize(10),len(20);
var: pCapitalperContract(200000),Equity(0),mp(0),ExitAmount(0),pts(1);

if InCludeOpenPL then Equity = Round((InitialCapital + NetProfit + OpenPositionProfit),0)
else Equity = Round((InitialCapital + NetProfit),0);
//-----LarryWilliams Rule-----
if InCludeOpenPL then
	Equity = Round((InitialCapital + NetProfit + OpenPositionProfit),0)
else
	Equity = Round((InitialCapital + NetProfit),0);
if maxiddrawdown &lt;&gt; 0 and entryprice &lt;&gt; 0 then begin
	if netprofit&lt;&gt;0 and maxiddrawdown&lt;&gt;0 then
          	pts=IntPortion(netprofit/(absvalue(maxiddrawdown)*1.3))+1;
	if pts &gt; IntPortion(Equity  / entryprice) then
		pts = IntPortion(Equity  / entryprice);
end;



//------turtle30(len)

mp=marketposition*currentcontracts;

if Close cross over Highest(high,len)[1] then buy(&quot;buy&quot;)pts contract the next bar at market;
if Close cross over Lowest(low,len)[1] then sellshort(&quot;sell&quot;)pts contract the next bar at market;
ExitAmount=pts;


if mp=1 then buy pts contract next bar at entryprice*
(1+0.01)stop;

if mp=-1 then sellshort pts contract next bar at entryprice*
(1-0.01)stop;



if mp&gt;=1 then sell pts contract next bar at entryprice*
(1- 0.02)stop;

if mp&lt;=1 then buytocover pts contract next bar at entryprice*
(1+0.02)stop;
</string>
             </property>
            </widget>
           </item>
          </layout>
         </widget>
        </widget>
       </item>
      </layout>
     </widget>
    </widget>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
